USE GRUPO3_TPI
GO

--SP Reporte
create procedure SP_REPORTE_ALUMNOS
@fecha_desde datetime = '1/1/2000',
@fecha_hasta datetime = '1/1/2030',
@tec varchar(200) = 'T%'
as
BEGIN
	SELECT a.id_alumno 'ID',
		   ape_alumno+', '+nom_alumno 'Nombre',
		   direccion+' - Nro: '+str(altura)+' - Barrio: '+b.barrio 'Direccion',
		   nro_tel 'Nro_Teléfono',
		   email 'Email',
		   fecha_inscripcion 'Fecha de Inscripción',
		   t.nom_tecnicatura 'Tecnicatura'
	  FROM Detalles_alumnos_materias Dam 
		   join Detalle_materias_comisiones Dmc
		   on Dam.id_detalle_materia_comision=Dmc.id_detalle_materia_comision
		   join Materias m on Dmc.id_materia=m.id_materia
		   join Tecnicaturas t on t.id_tecnicatura=m.id_materia
		   join Alumnos a on a.id_alumno = Dam.id_alumno
	       join Barrios b on a.id_barrio=b.id_barrio
	 where fecha_inscripcion between @fecha_desde and @fecha_hasta
		   and t.nom_tecnicatura = @tec
END;

--Fin SP Reporte
CREATE TABLE Usuarios(
id_usuarios int IDENTITY(1,1),
usuario varchar(90),
contraseña varchar(255)
CONSTRAINT pk_usuarios PRIMARY KEY(id_usuarios));

CREATE PROCEDURE SP_CHECK_USER
@usuario varchar(30)= 'default',
@contraseña varchar(20) = 'default'
AS
BEGIN
SELECT *
FROM Usuarios
WHERE usuario=@usuario
AND contraseña=@contraseña
END;

CREATE PROCEDURE SP_NUEVO_USER
@usuario varchar(90),
@contraseña varchar(255)
AS
BEGIN
INSERT INTO Usuarios(usuario,contraseña)
VALUES(@usuario,@contraseña)
END

CREATE PROCEDURE PA_TRAER_BARRIOS
AS
BEGIN
SELECT id_barrio,barrio,c.id_ciudad,ciudad
FROM Barrios b JOIN Ciudades c
ON b.id_ciudad=c.id_ciudad
END

CREATE PROCEDURE PA_TRAER_TITULOS
AS
BEGIN
SELECT * FROM Titulos
END

ALTER TABLE Docentes
ADD fecha_baja datetime

CREATE PROCEDURE PA_INSERTAR_DOCENTE
@id_docente int,
@nom_docente varchar(30),
@ape_docente varchar(30),
@direccion varchar(30),
@altura int,
@nro_tel varchar(30),
@email varchar(60),
@titulo int,
@barrio int
AS
BEGIN
INSERT INTO Docentes(id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,id_titulo,id_barrio)
VALUES(@id_docente,@nom_docente,@ape_docente,@direccion,@altura,@nro_tel,@email,@titulo,@barrio)
END

CREATE PROCEDURE PA_ACTUALIZAR_DOCENTE
@id_docente int,
@nom_docente varchar(30),
@ape_docente varchar(30),
@direccion varchar(30),
@altura int,
@nro_tel varchar(30),
@email varchar(60),
@titulo int,
@barrio int
AS
BEGIN
UPDATE Docentes
SET nom_docente=@nom_docente,
ape_docente= @ape_docente,
direccion=@direccion,
altura=@altura,
nro_tel=@nro_tel,
email=@email,
id_titulo=@titulo,
id_barrio=@barrio
WHERE id_docente=@id_docente
END

CREATE PROCEDURE PA_BORRAR_DOCENTE
@id_docente int
AS
BEGIN
UPDATE Docentes
SET fecha_baja=getdate()
WHERE id_docente=@id_docente
END

CREATE PROCEDURE PA_CONSULTAR_DOCENTES
@titulo int,
@barrio int,
@nombre varchar(30)
AS
BEGIN
SELECT id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,t.id_titulo,t.titulo,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Docentes D JOIN Titulos T ON D.id_titulo=T.id_titulo
	JOIN Barrios B ON B.id_barrio=D.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
WHERE d.id_titulo=@titulo
AND d.id_barrio=@barrio
AND nom_docente LIKE '%'+@nombre+'%'
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_DOCENTE
@docente int
AS
BEGIN
SELECT id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,t.id_titulo,t.titulo,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Docentes D JOIN Titulos T ON D.id_titulo=T.id_titulo
	JOIN Barrios B ON B.id_barrio=D.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
WHERE d.id_docente=@docente
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_DOCENTES_MATERIA
@materia int
AS
BEGIN
SELECT d.id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,t.id_titulo,t.titulo,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Docentes D JOIN Titulos T ON D.id_titulo=T.id_titulo
	JOIN Barrios B ON B.id_barrio=D.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
	JOIN Detalle_materias_comisiones  dmc ON dmc.id_docente=d.id_docente
	WHERE dmc.id_materia=@materia
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_MATERIAS
AS
BEGIN
SELECT m.id_materia, nom_materia, t.id_tecnicatura, nom_tecnicatura 
FROM Materias m JOIN Tecnicaturas t ON m.id_tecnicatura=t.id_tecnicatura
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_ALUMNOS_EXAMEN
@id_materia int
AS
BEGIN 
SELECT nom_alumno,ape_alumno,direccion,altura,email,a.id_barrio, barrio, a.id_estado_civil,estado_civil,a.id_situacion_laboral,situacion_laboral
FROM Alumnos a JOIN Detalles_alumnos_materias dam
	ON a.id_alumno=dam.id_alumno
	JOIN Detalle_materias_comisiones dmc 
	ON dmc.id_detalle_materia_comision=dam.id_detalle_materia_comision
	JOIN Barrios b ON b.id_barrio=a.id_barrio
	JOIN Situaciones_laborales s ON s.id_situacion_laboral=a.id_situacion_laboral
	JOIN Estados_civiles ec ON ec.id_estado_civil=a.id_estado_civil
WHERE dam.id_estado_academico=3
AND dmc.id_materia=2
AND DATEDIFF(month,fecha_estado,getdate())<=18
AND fecha_baja IS NULL
END


CREATE PROCEDURE PA_INSERTAR_EXAMEN
@fecha datetime,
@id_materia int,
@id_docente int,
@proxExamen int output
AS
BEGIN
INSERT INTO Examenes(fecha_examen,id_materia,id_docente) VALUES (@fecha,@id_materia,@id_docente)
SET @proxExamen = SCOPE_IDENTITY()
END;

CREATE PROCEDURE PA_INSERTAR_DETALLE_EXAMEN
@id_examen int,
@id_alumno int,
@nota int
AS
BEGIN
INSERT INTO Detalle_alumnos_examenes(id_examen,id_alumno,nota)
VALUES(@id_examen,@id_alumno,@nota)
END;

CREATE PROCEDURE PA_CONSULTAR_EXAMENES
@id_docente int,
@id_materia int
AS
BEGIN
SELECT id_examen,fecha_examen,e.id_docente,nom_docente,e.id_materia
FROM Examenes e JOIN Docentes d
	ON e.id_docente=d.id_docente
	JOIN Materias M
	ON m.id_materia=e.id_materia
WHERE e.id_docente=@id_docente
AND e.id_materia=@id_materia
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_EXAMEN
@id_examen int
AS
BEGIN
SELECT id_examen,fecha_examen,e.id_docente,nom_docente,d.ape_docente,e.id_materia
FROM Examenes e JOIN Docentes d
	ON e.id_docente=d.id_docente
	JOIN Materias M
	ON m.id_materia=e.id_materia
WHERE e.id_examen=@id_examen
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_DETALLES_EXAMEN
@id_examen int
AS 
BEGIN
SELECT id_detalle_alumno_examen,dae.nota,dae.id_alumno,nom_alumno,ape_alumno
FROM Detalle_alumnos_examenes dae JOIN Alumnos a
	ON dae.id_alumno=a.id_alumno
END

CREATE PROCEDURE PA_ACTUALIZAR_EXAMEN
@id_examen int,
@fecha datetime,
@id_materia int,
@id_docente int
AS
BEGIN
UPDATE Examenes
SET fecha_examen=@fecha,
id_materia=@id_materia,
id_docente=@id_docente
WHERE id_examen=@id_examen
--Borrado de detalles
DELETE Detalle_alumnos_examenes
WHERE id_examen=@id_examen
END

ALTER TABLE Examenes
ADD Fecha_baja Datetime

CREATE PROCEDURE PA_BORRAR_EXAMEN
@id_examen int = null
AS
BEGIN
UPDATE Examenes
SET Fecha_baja = getdate()
WHERE id_examen=@id_examen
END

CREATE PROCEDURE PA_INSERTAR_ALUMNO
@id_alumno int,
@nom_alumno varchar(30),
@ape_alumno varchar(30),
@direccion varchar(40),
@altura int,
@nro_tel varchar(30),
@email varchar(50),
@id_barrio int,
@id_situacion_laboral int,
@id_estado_civil int
AS
BEGIN
INSERT INTO Alumnos(id_alumno,nom_alumno,ape_alumno,direccion,altura,nro_tel,email,id_barrio,id_situacion_laboral,id_estado_civil)
VALUES(@id_alumno,@nom_alumno,@ape_alumno,@direccion,@altura,@nro_tel,@email,@id_barrio,@id_situacion_laboral,@id_estado_civil)
END

CREATE PROCEDURE PA_INSERTAR_DETALLE_ALUMNO
@id_alumno int,
@id_detalle_mat_com int,
@id_estado_acad int,
@fecha_inscr datetime,
@fecha_estado datetime
AS
BEGIN
INSERT INTO Detalles_alumnos_materias(id_alumno,id_detalle_materia_comision,id_estado_academico,fecha_inscripcion,fecha_estado)
VALUES (@id_alumno,@id_detalle_mat_com,@id_estado_acad,@fecha_inscr,@fecha_estado)
END

ALTER TABLE Alumnos
ADD fecha_baja Datetime

CREATE PROCEDURE PA_CONSULTAR_ALUMNOS
@situacion_lab int,
@estado_civil int,
@nombre varchar(30)
AS
BEGIN
SELECT id_alumno,nom_alumno,ape_alumno,direccion,altura,nro_tel,email,ec.id_estado_civil,ec.estado_civil,sl.id_situacion_laboral,sl.situacion_laboral,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Alumnos A JOIN Estados_civiles ec
	ON a.id_estado_civil=ec.id_estado_civil
	JOIN Situaciones_laborales sl
	ON sl.id_situacion_laboral=a.id_situacion_laboral
	JOIN Barrios B ON B.id_barrio=A.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
WHERE a.id_situacion_laboral=@situacion_lab
AND a.id_estado_civil=@estado_civil
AND nom_alumno LIKE '%'+@nombre+'%'
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_CONSULTAR_ALUMNO
@id_alumno int
AS
BEGIN
SELECT id_alumno,nom_alumno,ape_alumno,direccion,altura,nro_tel,email,ec.id_estado_civil,ec.estado_civil,sl.id_situacion_laboral,sl.situacion_laboral,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Alumnos A JOIN Estados_civiles ec
	ON a.id_estado_civil=ec.id_estado_civil
	JOIN Situaciones_laborales sl
	ON sl.id_situacion_laboral=a.id_situacion_laboral
	JOIN Barrios B ON B.id_barrio=A.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
WHERE a.id_alumno=@id_alumno
AND fecha_baja IS NULL
END

CREATE PROCEDURE PA_ACTUALIZAR_ALUMNO
@id_alumno int,
@nom_alumno varchar(30),
@ape_alumno varchar(30),
@direccion varchar(40),
@altura int,
@nro_tel varchar(30),
@email varchar(50),
@id_barrio int,
@id_situacion_laboral int,
@id_estado_civil int
AS
BEGIN
UPDATE Alumnos
SET nom_alumno=@nom_alumno,
ape_alumno=@ape_alumno,
direccion=@direccion,
altura=@altura,
nro_tel=@nro_tel,
email=@email,
id_barrio=@id_barrio,
id_situacion_laboral=@id_situacion_laboral,
id_estado_civil=@id_estado_civil
WHERE id_alumno=@id_alumno
--Borrado de detalles
DELETE Detalles_alumnos_materias
WHERE id_alumno=@id_alumno
END

CREATE PROCEDURE PA_BORRAR_ALUMNO
@id_alumno int
AS
BEGIN
UPDATE Alumnos
SET fecha_baja=getdate()
WHERE id_alumno=@id_alumno
END

ALTER TABLE Materias
ADD fecha_baja Datetime

ALTER PROCEDURE PA_CONSULTAR_MATERIAS_ALUMNO
@id_alumno int
AS
BEGIN
SELECT M.id_materia,M.nom_materia,t.id_tecnicatura,t.nom_tecnicatura,t.titulo_tecnicatura
FROM Materias M JOIN Tecnicaturas t
	ON t.id_tecnicatura=m.id_materia
WHERE @id_alumno NOT IN (SELECT dam.id_alumno FROM Detalle_materias_comisiones dmc
	JOIN Detalles_alumnos_materias dam
	ON dam.id_detalle_materia_comision=dmc.id_detalle_materia_comision
)
AND m.fecha_baja IS NULL
END

ALTER PROCEDURE [dbo].[PA_CONSULTAR_ALUMNOS_EXAMEN]
@id_materia int
AS
BEGIN 
SELECT a.id_alumno,nom_alumno,ape_alumno,direccion,altura,email,a.id_barrio, barrio, a.id_estado_civil,estado_civil,a.id_situacion_laboral,situacion_laboral
FROM Alumnos a JOIN Detalles_alumnos_materias dam
	ON a.id_alumno=dam.id_alumno
	JOIN Detalle_materias_comisiones dmc 
	ON dmc.id_detalle_materia_comision=dam.id_detalle_materia_comision
	JOIN Barrios b ON b.id_barrio=a.id_barrio
	JOIN Situaciones_laborales s ON s.id_situacion_laboral=a.id_situacion_laboral
	JOIN Estados_civiles ec ON ec.id_estado_civil=a.id_estado_civil
WHERE dam.id_estado_academico=3
AND dmc.id_materia=@id_materia
AND DATEDIFF(month,fecha_estado,getdate())<=18
AND fecha_baja IS NULL
END

go
ALTER PROCEDURE [dbo].[PA_CONSULTAR_DOCENTES_MATERIA]
@materia int
AS
BEGIN
SELECT distinct d.id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,t.id_titulo,t.titulo,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Docentes D JOIN Titulos T ON D.id_titulo=T.id_titulo
	JOIN Barrios B ON B.id_barrio=D.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
	JOIN Detalle_materias_comisiones  dmc ON dmc.id_docente=d.id_docente
	WHERE dmc.id_materia=@materia
AND fecha_baja IS NULL
END

ALTER PROCEDURE [dbo].[PA_CONSULTAR_ALUMNOS_EXAMEN]
@id_materia int
AS
BEGIN 
SELECT a.id_alumno,nom_alumno,ape_alumno,direccion,altura,email,a.id_barrio, barrio, a.id_estado_civil,estado_civil,a.id_situacion_laboral,situacion_laboral
FROM Alumnos a JOIN Detalles_alumnos_materias dam
	ON a.id_alumno=dam.id_alumno
	JOIN Detalle_materias_comisiones dmc 
	ON dmc.id_detalle_materia_comision=dam.id_detalle_materia_comision
	JOIN Barrios b ON b.id_barrio=a.id_barrio
	JOIN Situaciones_laborales s ON s.id_situacion_laboral=a.id_situacion_laboral
	JOIN Estados_civiles ec ON ec.id_estado_civil=a.id_estado_civil
WHERE dam.id_estado_academico=3
AND dmc.id_materia=@id_materia
AND DATEDIFF(month,fecha_estado,getdate())<=18
AND fecha_baja IS NULL
END

go
ALTER PROCEDURE [dbo].[PA_CONSULTAR_DOCENTES_MATERIA]
@materia int
AS
BEGIN
SELECT distinct d.id_docente,nom_docente,ape_docente,direccion,altura,nro_tel,email,t.id_titulo,t.titulo,b.id_barrio,b.barrio,c.id_ciudad,c.ciudad 
	FROM Docentes D JOIN Titulos T ON D.id_titulo=T.id_titulo
	JOIN Barrios B ON B.id_barrio=D.id_barrio
	JOIN Ciudades C ON C.id_ciudad=B.id_ciudad
	JOIN Detalle_materias_comisiones  dmc ON dmc.id_docente=d.id_docente
	WHERE dmc.id_materia=@materia
AND fecha_baja IS NULL
END


--Hasta aca llega el archivo: ScriptBD-(CON Sentencias LCII(en formato SP) y COMANDOS GRUPO3.txt (Hr.21_02 - 11_11_2023))

go
ALTER PROCEDURE PA_CONSULTAR_EXAMENES
    @id_docente INT=null,
    @id_materia INT=null,
    @fecha_desde DATETIME=null,
    @fecha_hasta DATETIME=null
AS
BEGIN
    SELECT id_examen, fecha_examen, e.id_docente, nom_docente, ape_docente, e.id_materia
    FROM Examenes e
    JOIN Docentes d ON e.id_docente = d.id_docente
    JOIN Materias m ON m.id_materia = e.id_materia
    WHERE (e.id_docente = @id_docente or @id_docente IS NULL)
        AND (e.id_materia = @id_materia or @id_materia IS NULL)
        AND e.fecha_baja IS NULL
        AND (
            (@fecha_desde IS NULL AND @fecha_hasta IS NULL) -- Ambas fechas son nulas
            OR (e.fecha_examen >= @fecha_desde AND e.fecha_examen <= @fecha_hasta)); -- Fechas dentro del rango
END

go
ALTER PROCEDURE PA_CONSULTAR_EXAMEN
@id_examen int
AS
BEGIN
SELECT id_examen,fecha_examen,e.id_docente,nom_docente,d.ape_docente,e.id_materia,nom_materia
FROM Examenes e JOIN Docentes d
	ON e.id_docente=d.id_docente
	JOIN Materias M
	ON m.id_materia=e.id_materia
WHERE e.id_examen=@id_examen
AND e.fecha_baja IS NULL
END

go
ALTER PROCEDURE PA_CONSULTAR_DETALLES_EXAMEN
@id_examen int
AS 
BEGIN
SELECT id_detalle_alumno_examen,dae.nota,dae.id_alumno,nom_alumno,ape_alumno
FROM Detalle_alumnos_examenes dae JOIN Alumnos a
	ON dae.id_alumno=a.id_alumno
	where id_examen=@id_examen
END